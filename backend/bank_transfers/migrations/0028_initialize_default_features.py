# Generated by Django 4.2.7 on 2025-08-30 18:53

from django.db import migrations


def initialize_feature_templates(apps, schema_editor):
    """Initialize default feature templates for the system"""
    FeatureTemplate = apps.get_model('bank_transfers', 'FeatureTemplate')
    
    # Define default feature templates
    default_features = [
        # Export Features
        {
            'feature_code': 'EXPORT_XML_SEPA',
            'display_name': 'SEPA XML Export',
            'description': 'Enable export of transfer batches as SEPA-compatible XML files for bank upload',
            'category': 'EXPORT',
            'default_enabled': True,
            'is_system_critical': True,
        },
        {
            'feature_code': 'EXPORT_CSV_KH',
            'display_name': 'KH Bank CSV Export',
            'description': 'Enable export of transfer batches as KH Bank compatible CSV files',
            'category': 'EXPORT',
            'default_enabled': True,
            'is_system_critical': False,
        },
        {
            'feature_code': 'EXPORT_CSV_CUSTOM',
            'display_name': 'Custom CSV Export',
            'description': 'Enable custom CSV export formats with configurable columns and formatting',
            'category': 'EXPORT',
            'default_enabled': False,
            'is_system_critical': False,
        },
        
        # Core Management Features
        {
            'feature_code': 'BENEFICIARY_MANAGEMENT',
            'display_name': 'Beneficiary Management',
            'description': 'Full CRUD operations for managing transfer beneficiaries and partners',
            'category': 'GENERAL',
            'default_enabled': True,
            'is_system_critical': True,
        },
        {
            'feature_code': 'BENEFICIARY_VIEW',
            'display_name': 'Beneficiary View Only',
            'description': 'Read-only access to view beneficiary information without modification rights',
            'category': 'GENERAL',
            'default_enabled': True,
            'is_system_critical': False,
        },
        {
            'feature_code': 'TRANSFER_MANAGEMENT',
            'display_name': 'Transfer Management',
            'description': 'Create, edit, and manage individual transfers and transfer batches',
            'category': 'GENERAL',
            'default_enabled': True,
            'is_system_critical': True,
        },
        {
            'feature_code': 'TRANSFER_VIEW',
            'display_name': 'Transfer View Only',
            'description': 'Read-only access to view transfer information without modification rights',
            'category': 'GENERAL',
            'default_enabled': True,
            'is_system_critical': False,
        },
        {
            'feature_code': 'BATCH_MANAGEMENT',
            'display_name': 'Batch Management',
            'description': 'Create and manage transfer batches for bulk processing',
            'category': 'GENERAL',
            'default_enabled': True,
            'is_system_critical': True,
        },
        {
            'feature_code': 'BATCH_VIEW',
            'display_name': 'Batch View Only',
            'description': 'Read-only access to view batch information and status',
            'category': 'GENERAL',
            'default_enabled': True,
            'is_system_critical': False,
        },
        
        # Synchronization Features
        {
            'feature_code': 'NAV_SYNC',
            'display_name': 'NAV Invoice Synchronization',
            'description': 'Synchronize invoices with Hungarian NAV (National Tax Authority) system',
            'category': 'SYNC',
            'default_enabled': False,
            'is_system_critical': False,
        },
        
        # Advanced Features
        {
            'feature_code': 'EXPENSE_TRACKING',
            'display_name': 'Expense Tracking',
            'description': 'Track and categorize business expenses beyond invoice payments',
            'category': 'TRACKING',
            'default_enabled': False,
            'is_system_critical': False,
        },
        {
            'feature_code': 'INVOICE_MANAGEMENT',
            'display_name': 'Invoice Management',
            'description': 'Manage manual invoice entries and payment tracking',
            'category': 'TRACKING',
            'default_enabled': False,
            'is_system_critical': False,
        },
        {
            'feature_code': 'BANK_STATEMENT_IMPORT',
            'display_name': 'Bank Statement Import',
            'description': 'Import and reconcile bank statements with transfers and invoices',
            'category': 'INTEGRATION',
            'default_enabled': False,
            'is_system_critical': False,
        },
        {
            'feature_code': 'MULTI_CURRENCY',
            'display_name': 'Multi-Currency Support',
            'description': 'Handle invoices and transfers in multiple currencies (USD, EUR, etc.)',
            'category': 'INTEGRATION',
            'default_enabled': False,
            'is_system_critical': False,
        },
        
        # Reporting Features
        {
            'feature_code': 'REPORTING',
            'display_name': 'Advanced Reporting',
            'description': 'Generate detailed financial reports and analytics',
            'category': 'REPORTING',
            'default_enabled': False,
            'is_system_critical': False,
        },
    ]
    
    # Create feature templates
    for feature_data in default_features:
        FeatureTemplate.objects.get_or_create(
            feature_code=feature_data['feature_code'],
            defaults=feature_data
        )


def add_sql_comments(apps, schema_editor):
    """SQL comments are now handled via centralized SQL scripts"""
    pass


def reverse_sql_comments(apps, schema_editor):
    """SQL comments are now handled via centralized SQL scripts"""
    pass


def reverse_feature_templates(apps, schema_editor):
    """Remove default feature templates when reversing migration"""
    FeatureTemplate = apps.get_model('bank_transfers', 'FeatureTemplate')
    # Only delete templates we created, not custom ones
    default_codes = [
        'EXPORT_XML_SEPA', 'EXPORT_CSV_KH', 'EXPORT_CSV_CUSTOM',
        'BENEFICIARY_MANAGEMENT', 'BENEFICIARY_VIEW', 'TRANSFER_MANAGEMENT',
        'TRANSFER_VIEW', 'BATCH_MANAGEMENT', 'BATCH_VIEW', 'NAV_SYNC',
        'EXPENSE_TRACKING', 'INVOICE_MANAGEMENT', 'BANK_STATEMENT_IMPORT',
        'MULTI_CURRENCY', 'REPORTING'
    ]
    FeatureTemplate.objects.filter(feature_code__in=default_codes).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('bank_transfers', '0027_add_feature_management_system'),
    ]

    operations = [
        migrations.RunPython(
            initialize_feature_templates,
            reverse_feature_templates,
            hints={'manages_storage': True}
        ),
        migrations.RunPython(
            add_sql_comments,
            reverse_sql_comments,
            hints={'manages_storage': True}
        ),
    ]
