# Generated by Django 4.2.7 on 2025-09-01 04:58

from django.db import migrations


def rename_transfer_management_feature(apps, schema_editor):
    """Rename TRANSFER_MANAGEMENT to TRANSFER_AND_TEMPLATE_MANAGEMENT"""
    FeatureTemplate = apps.get_model('bank_transfers', 'FeatureTemplate')
    
    # Update the FeatureTemplate record
    try:
        feature = FeatureTemplate.objects.get(feature_code='TRANSFER_MANAGEMENT')
        feature.feature_code = 'TRANSFER_AND_TEMPLATE_MANAGEMENT'
        feature.display_name = 'Transfer and Template Management'
        feature.description = 'Create, edit, and manage transfers, templates, and PDF imports'
        feature.save()
        
        print(f"✅ Updated feature: {feature.feature_code}")
    except FeatureTemplate.DoesNotExist:
        print("⚠️  TRANSFER_MANAGEMENT feature not found")


def reverse_rename_feature(apps, schema_editor):
    """Rollback: Rename back to TRANSFER_MANAGEMENT"""
    FeatureTemplate = apps.get_model('bank_transfers', 'FeatureTemplate')
    
    try:
        feature = FeatureTemplate.objects.get(feature_code='TRANSFER_AND_TEMPLATE_MANAGEMENT')
        feature.feature_code = 'TRANSFER_MANAGEMENT'
        feature.display_name = 'Transfer Management'  
        feature.description = 'Create, edit, and manage individual transfers and transfer batches'
        feature.save()
        
        print(f"✅ Rolled back to: {feature.feature_code}")
    except FeatureTemplate.DoesNotExist:
        print("⚠️  TRANSFER_AND_TEMPLATE_MANAGEMENT feature not found")


class Migration(migrations.Migration):

    dependencies = [
        ('bank_transfers', '0029_remove_company_address_remove_company_email_and_more'),
    ]

    operations = [
        migrations.RunPython(
            rename_transfer_management_feature,
            reverse_rename_feature
        ),
    ]
